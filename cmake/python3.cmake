cmake_minimum_required( VERSION 2.8 FATAL_ERROR )

# --------------------------------------
# PYTHON 3.x
# --------------------------------------
macro( CHECK_PYTHON3_EXECUTABLE  _candidate )
execute_process( COMMAND  ${_candidate}  ${CMAKE_CURRENT_LIST_DIR}/version.py
			   RESULT_VARIABLE  RET_PYVERSION
			   ERROR_VARIABLE  STDERR_PYVERSION
			   OUTPUT_VARIABLE  STDOUT_PYVERSION 
	                   ERROR_STRIP_TRAILING_WHITESPACE
			   OUTPUT_STRIP_TRAILING_WHITESPACE )
set( OUT_PYVERSION "${STDERR_PYVERSION}${STDOUT_PYVERSION}" )
if( ${RET_PYVERSION} STREQUAL "" OR ${RET_PYVERSION} STREQUAL "0" )
message( STATUS "Call ${_candidate}  ${CMAKE_CURRENT_LIST_DIR}/version.py result: '${OUT_PYVERSION}' " )
string( SUBSTRING  "${OUT_PYVERSION}"  0  8  PYVERSIONSTR )
if( ${PYVERSIONSTR}  STREQUAL  "Python 3" )
set( PYTHON3_EXECUTABLE  "${_candidate}" )
set( PYTHON3_VERSION  "${OUT_PYVERSION}" )
else( ${PYVERSIONSTR}  STREQUAL  "Python 3" )
unset( PYTHON3_EXECUTABLE )
unset( PYTHON3_VERSION )
endif( ${PYVERSIONSTR}  STREQUAL  "Python 3" )
else( ${RET_PYVERSION} STREQUAL "" OR ${RET_PYVERSION} STREQUAL "0")
unset( PYTHON3_EXECUTABLE )
unset( PYTHON3_VERSION )
endif( ${RET_PYVERSION} STREQUAL "" OR ${RET_PYVERSION} STREQUAL "0")
endmacro( CHECK_PYTHON3_EXECUTABLE )

macro( ECHO_COMMAND_RESULT )
execute_process( COMMAND  ${ARGN}
			   RESULT_VARIABLE  _rt
			   OUTPUT_VARIABLE  _result
			   OUTPUT_STRIP_TRAILING_WHITESPACE )
if( ${_rt} STREQUAL "" OR ${_rt} STREQUAL "0" )
message( STATUS "Result of '${ARGN}': ${_result}" ) 
else( ${_rt} STREQUAL "" OR ${_rt} STREQUAL "0" )
message( STATUS "Call of '${ARGN}' returned ${_rt}" )
endif( ${_rt} STREQUAL "" OR ${_rt} STREQUAL "0" )
endmacro( ECHO_COMMAND_RESULT )

if( PYTHON3_EXECUTABLE )
CHECK_PYTHON3_EXECUTABLE( ${PYTHON3_EXECUTABLE} )
endif( PYTHON3_EXECUTABLE )

macro( EXEC_FIND_BY_COMMAND )
if (NOT PYTHON3_EXECUTABLE)
execute_process( COMMAND  ${ARGN} 
			   RESULT_VARIABLE  RET_PYTHON_PATH
			   OUTPUT_VARIABLE  PYTHON_PROGRAM_PATH
			   OUTPUT_STRIP_TRAILING_WHITESPACE )
if( ${RET_PYTHON_PATH} STREQUAL "" OR ${RET_PYTHON_PATH} STREQUAL "0" )
CHECK_PYTHON3_EXECUTABLE( ${PYTHON_PROGRAM_PATH} )
if( PYTHON3_EXECUTABLE )
MESSAGE( STATUS "Found to program path of python3: '${PYTHON3_EXECUTABLE}' " )
endif( PYTHON3_EXECUTABLE )
endif( ${RET_PYTHON_PATH} STREQUAL "" OR ${RET_PYTHON_PATH} STREQUAL "0" )
endif (NOT PYTHON3_EXECUTABLE)
endmacro( EXEC_FIND_BY_COMMAND )

macro( EXEC_FIND_PROGRAM  _prgname )
if (NOT PYTHON3_EXECUTABLE)
set( FINDPATH $ENV{PATH} )
string( REPLACE ":"  ";"  FINDPATH  ${FINDPATH} )
separate_arguments( FINDPATH )
foreach( FP  ${FINDPATH} )
CHECK_PYTHON3_EXECUTABLE( "${FP}/${_prgname}" )
endforeach( FP  ${FINDPATH} )
find_program( PYCANDIDATE NAME  "${_prgname}" )
if( PYCANDIDATE AND NOT PYCANDIDATE STREQUAL "PYCANDIDATE-NOTFOUND" )
CHECK_PYTHON3_EXECUTABLE( "${PYCANDIDATE}" )
endif( PYCANDIDATE AND NOT PYCANDIDATE STREQUAL "PYCANDIDATE-NOTFOUND" )
endif (NOT PYTHON3_EXECUTABLE)
endmacro( EXEC_FIND_PROGRAM  _prgname )

foreach( PYVERSION "3.9" "3.8" "3.7" "3.6" "3.5" "3.4" "3.3" "3.2" "3.1" "3.0" "3" "" )
EXEC_FIND_PROGRAM( "python${PYVERSION}" )
EXEC_FIND_BY_COMMAND( "which"  "python${PYVERSION}" )
endforeach( PYVERSION "3.9" "3.8" "3.7" "3.6" "3.5" "3.4" "3.3" "3.2" "3.1" "3.0" "3" "" )

if( NOT PYTHON3_EXECUTABLE )
set( Python_ADDITIONAL_VERSIONS  3.9 3.8 3.7 3.6 3.5 3.4 3.3 3.2 3.1 )
find_package( PythonInterp 3 )
if ( PYTHONINTERP_FOUND )
CHECK_PYTHON3_EXECUTABLE(  "${PYTHON_EXECUTABLE}" )
endif ( PYTHONINTERP_FOUND )
endif( NOT PYTHON3_EXECUTABLE )

if( PYTHON3_EXECUTABLE )
execute_process( COMMAND  ${PYTHON3_EXECUTABLE} ${CMAKE_CURRENT_LIST_DIR}/sitepackages.py
			   OUTPUT_VARIABLE PYTHON3_SITE_PACKAGES
			   RESULT_VARIABLE  RET_CFG )
if( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
string( STRIP  ${PYTHON3_SITE_PACKAGES}  PYTHON3_SITE_PACKAGES )
MESSAGE( STATUS "Python 3.x site packages: ${PYTHON3_SITE_PACKAGES}" )
else( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
MESSAGE( SEND_ERROR "Failed to call ${CMAKE_CURRENT_LIST_DIR}/sitepackages.py (${RET_CFG})")
endif( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )

set( PYTHON3_CONFIG_EXECUTABLE  "${PYTHON3_EXECUTABLE}-config" )
MESSAGE( STATUS "Python-config executable:  ${PYTHON3_CONFIG_EXECUTABLE}" )

execute_process( COMMAND  ${PYTHON3_CONFIG_EXECUTABLE} --includes  OUTPUT_VARIABLE  PYTHON3_INCLUDES  RESULT_VARIABLE  RET_CFG )
if( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
string( REPLACE "-I"  ""  PYTHON3_INCLUDE_DIRS  ${PYTHON3_INCLUDES}  )
string( STRIP  ${PYTHON3_INCLUDE_DIRS}  PYTHON3_INCLUDE_DIRS )
string( REPLACE " "  ";"  PYTHON3_INCLUDE_DIRS  ${PYTHON3_INCLUDE_DIRS}  )
MESSAGE( STATUS "Python 3.x include dirs: ${PYTHON3_INCLUDE_DIRS}" )
else( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
MESSAGE( SEND_ERROR "Python program ${PYTHON3_CONFIG_EXECUTABLE} failed (${RET_CFG})")
endif( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )

execute_process( COMMAND  ${PYTHON3_CONFIG_EXECUTABLE} --ldflags  OUTPUT_VARIABLE PYTHON3_LDFLAGS RESULT_VARIABLE  RET_CFG )
if( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
string( REGEX MATCHALL "-L[^ ]*" PYTHON3_LINKDIRDEFS  "${PYTHON3_LDFLAGS}" )
string( REPLACE "-L"  " "  PYTHON3_LIBRARY_DIRS  "${PYTHON3_LINKDIRDEFS}"  )
string( STRIP  "${PYTHON3_LIBRARY_DIRS}"  PYTHON3_LIBRARY_DIRS )
separate_arguments( PYTHON3_LIBRARY_DIRS)
MESSAGE( STATUS "Python 3.x library dirs: ${PYTHON3_LIBRARY_DIRS}" )
else( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
MESSAGE( SEND_ERROR "Python program ${PYTHON3_CONFIG_EXECUTABLE} failed (${RET_CFG})")
endif( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )

execute_process( COMMAND  ${PYTHON3_CONFIG_EXECUTABLE} --libs OUTPUT_VARIABLE PYTHON3_LIBS RESULT_VARIABLE  RET_CFG )
if( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
string( REGEX MATCHALL "-l[^ ]*" PYTHON3_LIBS  "${PYTHON3_LIBS}" )
string( REPLACE "-l"  " "  PYTHON3_LIBRARIES  ${PYTHON3_LIBS}  )
string( STRIP  ${PYTHON3_LIBRARIES}  PYTHON3_LIBRARIES )
separate_arguments( PYTHON3_LIBRARIES)
MESSAGE( STATUS "Python 3.x libraries: ${PYTHON3_LIBRARIES}" )
else( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )
MESSAGE( SEND_ERROR "Python program ${PYTHON3_CONFIG_EXECUTABLE} failed (${RET_CFG})")
endif( ${RET_CFG} STREQUAL "" OR ${RET_CFG} STREQUAL "0" )

if( PYTHON3_VERSION )
MESSAGE( STATUS "Python 3.x version ${PYTHON3_VERSION}" )
else( PYTHON3_VERSION )
MESSAGE( STATUS "No python 3.x package found" )
endif( PYTHON3_VERSION )

else( PYTHON3_EXECUTABLE )
MESSAGE( FATAL_ERROR "Unable to locate Python 3.x interpreter" )
endif( PYTHON3_EXECUTABLE )

